package mojibake_test

import (
	"testing"

	"github.com/dolmen-go/mojibake"
)

// "magnÃ¯Â¿Â½tique"

func TestFixDoubleUTF8(t *testing.T) {
	for _, test := range []struct {
		in  string
		out string
	}{
		{"", ""},
		{"a", "a"},
		{"gÃƒÂ©lule", "gÃ©lule"},
		{"RÃƒÂ©fÃƒÂ©rence", "RÃ©fÃ©rence"},
		{"CrÃƒÂ©ÃƒÂ©", "CrÃ©Ã©"},
		{"CrÃƒÂ©ÃƒÂ©e", "CrÃ©Ã©e"},
		{"CrÃ©Ã©", "CrÃ©Ã©"},
		{"CrÃ©Ã©e", "CrÃ©Ã©e"},
		{"prÃƒÂ¨s", "prÃ¨s"},
		{"chÃƒÂ¢teau", "chÃ¢teau"},
		{"ÃƒÂ©nergie", "Ã©nergie"},
		{"ÃƒÂ©vÃƒÂ¨nement", "Ã©vÃ¨nement"},
		{"TÃƒÂªte", "TÃªte"},
		{"\u00f0\u009f\u0087\u00ab\u00f0\u009f\u0087\u00b7", "ğŸ‡«ğŸ‡·"},
	} {
		work := []byte(test.in)
		work, err := mojibake.FixDoubleUTF8(work)
		if err != nil && err != mojibake.ErrImpure {
			t.Errorf("%q: unexpected error %q", test.in, err)
		} else {
			if err == mojibake.ErrImpure {
				t.Logf("%q: %q", test.in, err)
			}
			out := string(work)
			if out != test.out {
				t.Errorf("%q: got %q, want %q", test.in, out, test.out)
				//t.Logf("%q -> %q", test.out, out)
			}
		}
	}
}
